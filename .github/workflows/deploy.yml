name: CI/CD Deployment

on:
  push:
    branches:
      - master

env:
  FRONTEND_IMAGE: asanalii/vue-frontend
  BACKEND_IMAGE: asanalii/fastapi-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      # - name: Build & Push Frontend Image
      #   run: |
      #     docker build -t $FRONTEND_IMAGE:latest ./frontend
      #     docker push $FRONTEND_IMAGE:latest

      # - name: Build & Push Backend Image
      #   run: |
      #     docker build -t $BACKEND_IMAGE:latest ./back
      #     docker push $BACKEND_IMAGE:latest

      - name: Find the correct path from inside SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "[WHOAMI] $(whoami)"
            echo "[HOME] $HOME"
            echo "[PWD] $(pwd)"
            echo "[CHECK] /root/deploy/blog-docker:"
            ls -la /root/deploy/blog-docker || echo "❌ /root/deploy/blog-docker does not exist"
            echo "[CHECK] ~/deploy/blog-docker:"
            ls -la ~/deploy/blog-docker || echo "❌ ~/deploy/blog-docker does not exist"
            echo "[CHECK] /home/root/deploy/blog-docker:"
            ls -la /home/root/deploy/blog-docker || echo "❌ /home/root/deploy/blog-docker does not exist"
            echo "[CHECK] /home/runner/deploy/blog-docker:"
            ls -la /home/runner/deploy/blog-docker || echo "❌ /home/runner/deploy/blog-docker does not exist"

      # - name: Deploy to Swarm Server via SSH (prod)
      #   uses: appleboy/ssh-action@v1.0.0
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: root
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     script: |
      #       cd ~/deploy/blog-docker && git pull origin master && docker stack deploy -c docker-compose.yml blogapp

# cd /root/deploy/blog-docker && docker stack deploy -c docker-compose.yml blogapp
# cd /opt/blogapp/blog-docker && docker stack deploy -c docker-compose.yml blogapp
